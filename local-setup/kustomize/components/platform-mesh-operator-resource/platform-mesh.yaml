apiVersion: core.platform-mesh.io/v1alpha1
kind: PlatformMesh
metadata:
  name: platform-mesh
  namespace: platform-mesh-system
spec:
  exposure:
    port: 8443
  ocm:
    repo:
      name: platform-mesh
    component:
      name: platform-mesh
    referencePath: []
  values:
    istio-gateway:
      enabled: true
      targetNamespace: istio-system
      values:
        service:
          type: None
    keycloak:
      enabled: true
      values:
        service:
          clusterIP: 10.96.0.110
        resources:
          limits:
            cpu: "2"
            ephemeral-storage: 2Gi
            memory: 2Gi
          requests:
            cpu: 750m
            ephemeral-storage: 50Mi
            memory: 1Gi
    crossplane:
      values:
        provider:
          packages:
            - xpkg.upbound.io/crossplane-contrib/provider-keycloak:v2.7.2
    infra:
      dependsOn:
        - name: istio-istiod
          namespace: default
        - name: kcp-operator
          namespace: default
      values:
        mailpit:
          enabled: true
        hostAliases:
          enabled: true
        kcp:
          webhook:
            enabled: true
          frontProxy:
            clusterIP: "10.96.0.100"
        keycloak:
          crossplane:
            clients:
              welcome:
                validRedirectUris:
                  - "http://localhost:8000/callback*"
                  - "http://localhost:4300/callback*"
                  - "https://*"
    observability:
      enabled: false
    kcp:
      enabled: false
    kcp-operator:
      enabled: true
      imageResource:
        enabled: true
        labels:
          infra: "true"
          component: infra
      values:
        crds:
          create: false
        image:
          repository: ghcr.io/kcp-dev/kcp-operator
          #TODO this is needed until the latest changes are released like https://github.com/kcp-dev/kcp-operator/pull/89 and https://github.com/kcp-dev/kcp-operator/pull/88
          tag: "main"
          pullPolicy: IfNotPresent
    security-operator:
      values:
        fga:
          inviteKeycloakBaseUrl: http://keycloak/keycloak
        initializer:
          baseDomain: "{{ .Values.baseDomain }}:{{ .Values.port }}"
          extraArgs:
            - --idp-smtp-server=mailpit.platform-mesh-system.svc.cluster.local
            - --idp-smtp-port=1025
            - --idp-from-address=keycloak@portal.dev.local
            - --domain-ca-lookup
            - --idp-additional-redirect-urls="https://default.portal.dev.local:3000/callback*"
        hostAliases:
          enabled: true
          items:
            - ip: 10.96.0.100
              hostnames:
                - kcp.api.portal.dev.local
    portal:
      enabled: true
      values:
        extraEnvVars:
          - name: OPENMFP_PORTAL_CONTEXT_CRD_GATEWAY_API_URL
            value: "https://${org-subdomain}portal.dev.local:8443/api/kubernetes-graphql-gateway/root:orgs:${org-name}/graphql"
          - name: NODE_EXTRA_CA_CERTS
            value: /etc/ssl/certs/domain-ca.crt
        extraVolumes:
          - name: domain-ca
            secret:
              secretName: domain-certificate-ca
        extraVolumeMounts:
          - name: domain-ca
            mountPath: /etc/ssl/certs/domain-ca.crt
            subPath: tls.crt
            readOnly: true
        deployment:
          hostAliases:
            - ip: "10.96.188.4"
              hostnames:
                - "portal.dev.local"
        virtualService:
          hosts:
            - "portal.dev.local"
            - "*.portal.dev.local"
    openfga:
      enabled: true
      values:
        datastore:
          uri: "postgres://postgres:password@openfga-postgres.platform-mesh-system.svc.cluster.local:5432/postgres?sslmode=disable"
        postgresql:
          auth:
            postgresPassword: password
            database: postgres
        telemetry:
          trace:
            enabled: true
            otlp:
              endpoint: observability-opentelemetry-collector.observability.svc.cluster.local:4317
              tls:
                enabled: false
    virtual-workspaces:
      values:
        virtualWorkspaceSecretName: virtual-workspaces-cert
        deployment:
          serverUrl: "https://frontproxy-front-proxy.platform-mesh-system:6443"
          resourceSchemaName: "v250704-6d57f16.contentconfigurations.ui.platform-mesh.io"
          resourceSchemaWorkspace: "root:platform-mesh-system"
    kubernetes-graphql-gateway:
      enabled: true
      values:
        listener:
          virtualWorkspacesConfig:
            content:
              virtualWorkspaces:
                - kubeconfig: /app/kubeconfig/kubeconfig
                  name: contentconfigurations
                  url: https://frontproxy-front-proxy.platform-mesh-system:6443/services/contentconfigurations
                  # - kubeconfig: /app/kubeconfig/kubeconfig
                  #   name: marketplace
                  #   url: https://frontproxy-front-proxy.platform-mesh-system:6443/services/marketplace
            enabled: true
