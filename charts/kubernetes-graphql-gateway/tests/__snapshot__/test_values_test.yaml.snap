match the Snapshot:
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: platform-mesh-kubernetes-graphql-gateway
      name: platform-mesh-kubernetes-graphql-gateway
      namespace: platform-mesh-system
    spec:
      replicas: 1
      revisionHistoryLimit: 3
      selector:
        matchLabels:
          app: platform-mesh-kubernetes-graphql-gateway
      strategy:
        rollingUpdate:
          maxSurge: 5
          maxUnavailable: 0
      template:
        metadata:
          labels:
            app: platform-mesh-kubernetes-graphql-gateway
            version: 1.0.0
        spec:
          containers:
            - args:
                - gateway
                - --metrics-bind-address=:8081
                - --health-probe-bind-address=:3389
                - --log-level=warn
                - --tracing-enabled=true
                - --tracing-config-service-name=platform-mesh-kubernetes-graphql-gateway.platform-mesh-system
                - --tracing-config-service-version=1.0.0
                - --tracing-config-collector-endpoint=observability-opentelemetry-collector.platform-mesh-observability.svc.cluster.local:4317
              env:
                - name: KEY1
                  value: value1
                - name: OPENAPI_DEFINITIONS_PATH
                  value: /app/definitions
                - name: LOCAL_DEVELOPMENT
                  value: "false"
                - name: ENABLE_KCP
                  value: "true"
                - name: KEY1
                  value: value1
                - name: GATEWAY_HANDLER_CFG_GRAPHI_QL
                  value: "true"
                - name: GATEWAY_LOG_LEVEL
                  value: trace
                - name: GATEWAY_PORT
                  value: "8080"
                - name: GATEWAY_USERNAME_CLAIM
                  value: email
                - name: GATEWAY_SHOULD_IMPERSONATE
                  value: "true"
                - name: GATEWAY_INTROSPECTION_AUTHENTICATION
                  value: "true"
              image: ghcr.io/openmfp/kubernetes-graphql-gateway:1.0.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 1
                httpGet:
                  path: /healthz
                  port: 3389
                periodSeconds: 10
              name: platform-mesh-kubernetes-graphql-gateway-gateway
              ports:
                - containerPort: 8081
                  name: metrics
                  protocol: TCP
                - containerPort: 3389
                  name: health-port
                  protocol: TCP
                - containerPort: 8080
                  name: service-port
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /readyz
                  port: 3389
                initialDelaySeconds: 5
                periodSeconds: 10
              resources:
                limits:
                  memory: 512Mi
                requests:
                  cpu: 40m
                  memory: 50Mi
              securityContext:
                readOnlyRootFilesystem: true
                runAsNonRoot: true
                seccompProfile:
                  type: RuntimeDefault
              startupProbe:
                failureThreshold: 30
                httpGet:
                  path: /readyz
                  port: 3389
                periodSeconds: 10
              volumeMounts:
                - mountPath: /app/definitions
                  name: definitions-volume
            - args:
                - listener
                - --metrics-bind-address=:8091
                - --health-probe-bind-address=:3390
                - --log-level=warn
              env:
                - name: KEY1
                  value: value1
                - name: OPENAPI_DEFINITIONS_PATH
                  value: /app/definitions
                - name: LOCAL_DEVELOPMENT
                  value: "false"
                - name: ENABLE_KCP
                  value: "true"
                - name: KEY1
                  value: value1
                - name: LISTENER_APIEXPORT_NAME
                  value: kcp.io
                - name: VIRTUAL_WORKSPACES_CONFIG_PATH
                  value: /app/config/virtual-workspaces.yaml
              image: ghcr.io/openmfp/kubernetes-graphql-gateway:1.0.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 1
                httpGet:
                  path: /healthz
                  port: 3390
                periodSeconds: 10
              name: platform-mesh-kubernetes-graphql-gateway-listener
              ports:
                - containerPort: 8091
                  name: metrics
                  protocol: TCP
                - containerPort: 3390
                  name: health-port
                  protocol: TCP
                - containerPort: 8090
                  name: service-port
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /readyz
                  port: 3390
                initialDelaySeconds: 5
                periodSeconds: 10
              resources:
                limits:
                  memory: 512Mi
                requests:
                  cpu: 40m
                  memory: 50Mi
              securityContext:
                readOnlyRootFilesystem: true
                runAsNonRoot: true
                seccompProfile:
                  type: RuntimeDefault
              startupProbe:
                failureThreshold: 30
                httpGet:
                  path: /readyz
                  port: 3390
                periodSeconds: 10
              volumeMounts:
                - mountPath: /app/definitions
                  name: definitions-volume
                - mountPath: /app/config
                  name: virtual-workspaces-config-volume
          serviceAccountName: platform-mesh-kubernetes-graphql-gateway
          volumes:
            - emptyDir:
                sizeLimit: 500Mi
              name: definitions-volume
            - configMap:
                name: virtual-workspaces-config
              name: virtual-workspaces-config-volume
  2: |
    apiVersion: networking.istio.io/v1alpha3
    kind: DestinationRule
    metadata:
      name: platform-mesh-kubernetes-graphql-gateway
      namespace: platform-mesh-system
    spec:
      host: platform-mesh-kubernetes-graphql-gateway.platform-mesh-system.svc.cluster.local
      trafficPolicy:
        tls:
          mode: ISTIO_MUTUAL
  3: |
    apiVersion: security.istio.io/v1beta1
    kind: PeerAuthentication
    metadata:
      name: platform-mesh-kubernetes-graphql-gateway
      namespace: platform-mesh-system
    spec:
      mtls:
        mode: STRICT
      selector:
        matchLabels:
          app: platform-mesh-kubernetes-graphql-gateway
  4: |
    apiVersion: networking.istio.io/v1alpha3
    kind: VirtualService
    metadata:
      name: platform-mesh-kubernetes-graphql-gateway
      namespace: platform-mesh-system
    spec:
      gateways:
        - platform-mesh-system/gateway
      hosts:
        - '*'
      http:
        - corsPolicy:
            allowHeaders:
              - Authorization
              - Content-Type
              - '*'
            allowMethods:
              - GET
              - POST
            allowOrigins:
              - regex: .*
          match:
            - uri:
                prefix: /kubernetes-graphql-gateway/
          rewrite:
            uri: /
          route:
            - destination:
                host: platform-mesh-kubernetes-graphql-gateway.platform-mesh-system.svc.cluster.local
                port:
                  number: 8080
  5: |
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: platform-mesh-kubernetes-graphql-gateway
      namespace: platform-mesh-system
  6: |
    apiVersion: v1
    kind: Service
    metadata:
      name: platform-mesh-kubernetes-graphql-gateway
      namespace: platform-mesh-system
    spec:
      ports:
        - name: http-8080
          port: 8080
          protocol: TCP
        - name: health
          port: 3389
          protocol: TCP
      selector:
        app: platform-mesh-kubernetes-graphql-gateway
      type: ClusterIP
  7: |
    apiVersion: v1
    data:
      virtual-workspaces.yaml: "virtualWorkspaces:\n  - name: custom-ws\n    url: https://example.com\n    kubeconfig: /etc/kubeconfig/kubeconfig "
    kind: ConfigMap
    metadata:
      labels:
        app: platform-mesh-kubernetes-graphql-gateway
      name: virtual-workspaces-config
      namespace: platform-mesh-system
match the Snapshot with crds:
  1: |
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: v0.18.0
      name: clusteraccesses.gateway.platform-mesh.io
    spec:
      group: gateway.platform-mesh.io
      names:
        kind: ClusterAccess
        listKind: ClusterAccessList
        plural: clusteraccesses
        shortNames:
          - ca
        singular: clusteraccess
      scope: Cluster
      versions:
        - name: v1alpha1
          schema:
            openAPIV3Schema:
              description: ClusterAccess is the Schema for the clusteraccesses API
              properties:
                apiVersion:
                  description: |-
                    APIVersion defines the versioned schema of this representation of an object.
                    Servers should convert recognized schemas to the latest internal value, and
                    may reject unrecognized values.
                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                  type: string
                kind:
                  description: |-
                    Kind is a string value representing the REST resource this object represents.
                    Servers may infer this from the endpoint the client submits requests to.
                    Cannot be updated.
                    In CamelCase.
                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                  type: string
                metadata:
                  type: object
                spec:
                  description: ClusterAccessSpec defines the desired state of ClusterAccess
                  properties:
                    auth:
                      description: Auth configuration for the cluster
                      properties:
                        clientCertificateRef:
                          description: ClientCertificateRef points to secrets containing client certificate and key for mTLS
                          properties:
                            name:
                              type: string
                            namespace:
                              type: string
                          required:
                            - name
                          type: object
                        kubeconfigSecretRef:
                          description: KubeconfigSecretRef points to a secret containing kubeconfig
                          properties:
                            name:
                              type: string
                            namespace:
                              type: string
                          required:
                            - name
                          type: object
                        secretRef:
                          description: SecretRef points to a secret containing auth token
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            namespace:
                              type: string
                          required:
                            - key
                            - name
                          type: object
                        serviceAccount:
                          description: ServiceAccount is the name of the service account to use
                          properties:
                            audience:
                              items:
                                type: string
                              type: array
                            name:
                              type: string
                            namespace:
                              type: string
                            token_expiration:
                              type: string
                          type: object
                      type: object
                    ca:
                      description: CA configuration for the cluster
                      properties:
                        configMapRef:
                          description: ConfigMapRef points to a config map containing CA data
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            namespace:
                              type: string
                          required:
                            - key
                            - name
                          type: object
                        secretRef:
                          description: SecretRef points to a secret containing CA data
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            namespace:
                              type: string
                          required:
                            - key
                            - name
                          type: object
                      type: object
                    host:
                      description: Host is the URL for the cluster
                      type: string
                    path:
                      description: Path is an optional field. If not set, the name of the resource is used
                      type: string
                  required:
                    - host
                  type: object
                status:
                  description: ClusterAccessStatus defines the observed state of ClusterAccess
                  properties:
                    conditions:
                      description: Conditions represent the latest available observations of the cluster access state
                      items:
                        description: Condition contains details for one aspect of the current state of this API Resource.
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False, Unknown.
                            enum:
                              - "True"
                              - "False"
                              - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                          - lastTransitionTime
                          - message
                          - reason
                          - status
                          - type
                        type: object
                      type: array
                  type: object
              type: object
          served: true
          storage: true
          subresources:
            status: {}
  2: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: platform-mesh-kubernetes-graphql-gateway
      name: platform-mesh-kubernetes-graphql-gateway
      namespace: platform-mesh-system
    spec:
      replicas: 1
      revisionHistoryLimit: 3
      selector:
        matchLabels:
          app: platform-mesh-kubernetes-graphql-gateway
      strategy:
        rollingUpdate:
          maxSurge: 5
          maxUnavailable: 0
      template:
        metadata:
          labels:
            app: platform-mesh-kubernetes-graphql-gateway
            version: 1.0.0
        spec:
          containers:
            - args:
                - gateway
                - --metrics-bind-address=:8081
                - --health-probe-bind-address=:3389
                - --log-level=warn
                - --tracing-enabled=true
                - --tracing-config-service-name=platform-mesh-kubernetes-graphql-gateway.platform-mesh-system
                - --tracing-config-service-version=1.0.0
                - --tracing-config-collector-endpoint=observability-opentelemetry-collector.platform-mesh-observability.svc.cluster.local:4317
              env:
                - name: KEY1
                  value: value1
                - name: OPENAPI_DEFINITIONS_PATH
                  value: /app/definitions
                - name: LOCAL_DEVELOPMENT
                  value: "false"
                - name: ENABLE_KCP
                  value: "true"
                - name: KEY1
                  value: value1
                - name: GATEWAY_HANDLER_CFG_GRAPHI_QL
                  value: "true"
                - name: GATEWAY_LOG_LEVEL
                  value: trace
                - name: GATEWAY_PORT
                  value: "8080"
                - name: GATEWAY_USERNAME_CLAIM
                  value: email
                - name: GATEWAY_SHOULD_IMPERSONATE
                  value: "true"
                - name: GATEWAY_INTROSPECTION_AUTHENTICATION
                  value: "true"
              image: ghcr.io/openmfp/kubernetes-graphql-gateway:1.0.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 1
                httpGet:
                  path: /healthz
                  port: 3389
                periodSeconds: 10
              name: platform-mesh-kubernetes-graphql-gateway-gateway
              ports:
                - containerPort: 8081
                  name: metrics
                  protocol: TCP
                - containerPort: 3389
                  name: health-port
                  protocol: TCP
                - containerPort: 8080
                  name: service-port
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /readyz
                  port: 3389
                initialDelaySeconds: 5
                periodSeconds: 10
              resources:
                limits:
                  memory: 512Mi
                requests:
                  cpu: 40m
                  memory: 50Mi
              securityContext:
                readOnlyRootFilesystem: true
                runAsNonRoot: true
                seccompProfile:
                  type: RuntimeDefault
              startupProbe:
                failureThreshold: 30
                httpGet:
                  path: /readyz
                  port: 3389
                periodSeconds: 10
              volumeMounts:
                - mountPath: /app/definitions
                  name: definitions-volume
            - args:
                - listener
                - --metrics-bind-address=:8091
                - --health-probe-bind-address=:3390
                - --log-level=warn
              env:
                - name: KEY1
                  value: value1
                - name: OPENAPI_DEFINITIONS_PATH
                  value: /app/definitions
                - name: LOCAL_DEVELOPMENT
                  value: "false"
                - name: ENABLE_KCP
                  value: "true"
                - name: KEY1
                  value: value1
                - name: LISTENER_APIEXPORT_NAME
                  value: kcp.io
                - name: VIRTUAL_WORKSPACES_CONFIG_PATH
                  value: /app/config/virtual-workspaces.yaml
              image: ghcr.io/openmfp/kubernetes-graphql-gateway:1.0.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 1
                httpGet:
                  path: /healthz
                  port: 3390
                periodSeconds: 10
              name: platform-mesh-kubernetes-graphql-gateway-listener
              ports:
                - containerPort: 8091
                  name: metrics
                  protocol: TCP
                - containerPort: 3390
                  name: health-port
                  protocol: TCP
                - containerPort: 8090
                  name: service-port
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /readyz
                  port: 3390
                initialDelaySeconds: 5
                periodSeconds: 10
              resources:
                limits:
                  memory: 512Mi
                requests:
                  cpu: 40m
                  memory: 50Mi
              securityContext:
                readOnlyRootFilesystem: true
                runAsNonRoot: true
                seccompProfile:
                  type: RuntimeDefault
              startupProbe:
                failureThreshold: 30
                httpGet:
                  path: /readyz
                  port: 3390
                periodSeconds: 10
              volumeMounts:
                - mountPath: /app/definitions
                  name: definitions-volume
                - mountPath: /app/config
                  name: virtual-workspaces-config-volume
          serviceAccountName: platform-mesh-kubernetes-graphql-gateway
          volumes:
            - emptyDir:
                sizeLimit: 500Mi
              name: definitions-volume
            - configMap:
                name: virtual-workspaces-config
              name: virtual-workspaces-config-volume
  3: |
    apiVersion: networking.istio.io/v1alpha3
    kind: DestinationRule
    metadata:
      name: platform-mesh-kubernetes-graphql-gateway
      namespace: platform-mesh-system
    spec:
      host: platform-mesh-kubernetes-graphql-gateway.platform-mesh-system.svc.cluster.local
      trafficPolicy:
        tls:
          mode: ISTIO_MUTUAL
  4: |
    apiVersion: security.istio.io/v1beta1
    kind: PeerAuthentication
    metadata:
      name: platform-mesh-kubernetes-graphql-gateway
      namespace: platform-mesh-system
    spec:
      mtls:
        mode: STRICT
      selector:
        matchLabels:
          app: platform-mesh-kubernetes-graphql-gateway
  5: |
    apiVersion: networking.istio.io/v1alpha3
    kind: VirtualService
    metadata:
      name: platform-mesh-kubernetes-graphql-gateway
      namespace: platform-mesh-system
    spec:
      gateways:
        - platform-mesh-system/gateway
      hosts:
        - '*'
      http:
        - corsPolicy:
            allowHeaders:
              - Authorization
              - Content-Type
              - '*'
            allowMethods:
              - GET
              - POST
            allowOrigins:
              - regex: .*
          match:
            - uri:
                prefix: /kubernetes-graphql-gateway/
          rewrite:
            uri: /
          route:
            - destination:
                host: platform-mesh-kubernetes-graphql-gateway.platform-mesh-system.svc.cluster.local
                port:
                  number: 8080
  6: |
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: platform-mesh-kubernetes-graphql-gateway
      namespace: platform-mesh-system
  7: |
    apiVersion: v1
    kind: Service
    metadata:
      name: platform-mesh-kubernetes-graphql-gateway
      namespace: platform-mesh-system
    spec:
      ports:
        - name: http-8080
          port: 8080
          protocol: TCP
        - name: health
          port: 3389
          protocol: TCP
      selector:
        app: platform-mesh-kubernetes-graphql-gateway
      type: ClusterIP
  8: |
    apiVersion: v1
    data:
      virtual-workspaces.yaml: "virtualWorkspaces:\n  - name: custom-ws\n    url: https://example.com\n    kubeconfig: /etc/kubeconfig/kubeconfig "
    kind: ConfigMap
    metadata:
      labels:
        app: platform-mesh-kubernetes-graphql-gateway
      name: virtual-workspaces-config
      namespace: platform-mesh-system
