{{- if eq (include "common.getNestedValue" (dict "Values" .Values "key" "externalSecrets.enabled")) "true" -}}
{{- $namespace := .Release.Namespace}}
{{- $secretKeys := list }}
{{- range $key, $idp := .Values.trust }}
  {{- $keyToAdd :=  $idp.secretKey | default $key }}
  {{- if not (has $idp.secretKey $secretKeys) }}
  {{- $secretKeys = append $secretKeys $keyToAdd }}
  {{- end }}
{{- end }}
{{- range $key := $secretKeys }}
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: {{ $.Release.Name }}-portal-client-secret-{{ $key }}
  namespace: {{ $namespace }}
spec:
  refreshInterval: 10m
  secretStoreRef:
    kind: SecretStore
    name: environment-store
  target:
    creationPolicy: Owner
    deletionPolicy: Retain
    name: portal-client-secret-{{ $key }}
  data:
    - remoteRef:
        conversionStrategy: Default
        key: dxp-core-team/manual-secrets/portal-client-secrets
        property: {{ $key }}
      secretKey: secret
---
{{- end }}
{{- end }}