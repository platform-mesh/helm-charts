{{- if eq (include "common.getNestedValue" (dict "Values" .Values "key" "crossplane.enabled")) "true" -}}
{{- range $key, $val := .Values.crossplane.clients }}
---  
apiVersion: openidclient.keycloak.crossplane.io/v1alpha1
kind: Client
metadata:
  name: {{ $key }}
spec:
  forProvider:
    enabled: true
    accessType: {{ default "CONFIDENTIAL" $val.accessType }}
    clientId: {{ $key }}
    standardFlowEnabled: true
    name: {{ $val.name }}
    realmIdRef:
      name: {{ $.Values.crossplane.realm.name }}
    validRedirectUris: {{ toYaml $val.validRedirectUris | nindent 6 }}
  providerConfigRef:
    name: {{ $.Values.crossplane.providerConfig.name }}
{{- if ne $val.accessType "PUBLIC" }}
  writeConnectionSecretToRef:
    name: {{ $.Values.keycloakConfig.client.targetSecret.name }}
    namespace: {{ $.Values.keycloakConfig.client.targetSecret.namespace }}
{{- end }}

---

apiVersion: openidclient.keycloak.crossplane.io/v1alpha1
kind: ClientDefaultScopes
metadata:
  name: {{ $key }}-default-scopes
spec:
  forProvider:
    clientIdRef:
      name: {{ $key }}
    defaultScopes:
    - profile
    - email
    - basic
    - acr
    - groups
    - trusted-openmfp-audiences
    realmIdRef:
      name: {{ $.Values.crossplane.realm.name }}
  providerConfigRef:
    name: {{ $.Values.crossplane.providerConfig.name }}
{{ end -}}
{{- end -}}