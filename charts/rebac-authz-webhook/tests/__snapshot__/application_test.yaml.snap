it should render the application manifests:
  1: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: rebac-authz-webhook
    rules:
      - apiGroups:
          - core.platform-mesh.io
        resources:
          - accounts
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - core.platform-mesh.io
        resources:
          - accounts
          - accounts/status
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - ""
        resources:
          - namespaces
        verbs:
          - get
          - list
          - watch
  2: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: rebac-authz-webhook
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: rebac-authz-webhook
    subjects:
      - kind: ServiceAccount
        name: rebac-authz-webhook
        namespace: platform-mesh-system
  3: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app.kubernetes.io/instance: rebac-authz-webhook
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: rebac-authz-webhook
        app.kubernetes.io/version: 0.0.0
        helm.sh/chart: rebac-authz-webhook-0.0.0
      name: rebac-authz-webhook
      namespace: platform-mesh-system
    spec:
      selector:
        matchLabels:
          app.kubernetes.io/instance: rebac-authz-webhook
          app.kubernetes.io/name: rebac-authz-webhook
      template:
        metadata:
          annotations: {}
          labels:
            app.kubernetes.io/instance: rebac-authz-webhook
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: rebac-authz-webhook
            app.kubernetes.io/version: 0.0.0
            helm.sh/chart: rebac-authz-webhook-0.0.0
            networking.resources.gardener.cloud/to-openfga-tcp-grpc: allowed
        spec:
          containers:
            - args:
                - serve
                - --openfga-addr=https://example.com
                - --kcp-kubeconfig-path=/etc/kcp-kubeconfig/kubeconfig
                - --webhook-audience=rebac-authz-webhook
                - --log-level=INFO
                - --health-probe-bind-address=:8081
              env: null
              image: ghcr.io/platform-mesh/rebac-authz-webhook:0.0.0
              livenessProbe:
                failureThreshold: 1
                httpGet:
                  path: /healthz
                  port: 8081
                periodSeconds: 10
              name: rebac-authz-webhook
              ports:
                - containerPort: 9443
                - containerPort: 8080
              readinessProbe:
                httpGet:
                  path: /readyz
                  port: 8081
                initialDelaySeconds: 5
                periodSeconds: 10
              resources:
                limits:
                  cpu: 500m
                  memory: 128Mi
              startupProbe:
                failureThreshold: 30
                httpGet:
                  path: /readyz
                  port: 8081
                periodSeconds: 10
              volumeMounts:
                - mountPath: /config
                  name: certs
                - mountPath: /etc/kcp-kubeconfig
                  name: kcp-kubeconfig
                  readOnly: true
          serviceAccountName: rebac-authz-webhook
          volumes:
            - name: certs
              secret:
                secretName: rebac-authz-webhook-cert
            - name: kcp-kubeconfig
              secret:
                secretName: rebac-authz-webhook-kubeconfig
  4: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app.kubernetes.io/instance: rebac-authz-webhook
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: rebac-authz-webhook
        app.kubernetes.io/version: 0.0.0
        helm.sh/chart: rebac-authz-webhook-0.0.0
      name: rebac-authz-webhook
    spec:
      ports:
        - name: rebac-authz-webhook
          port: 9443
          targetPort: 9443
        - name: metrics
          port: 8080
          targetPort: 8080
      selector:
        app.kubernetes.io/instance: rebac-authz-webhook
        app.kubernetes.io/name: rebac-authz-webhook
      type: ClusterIP
  5: |
    apiVersion: v1
    automountServiceAccountToken: true
    kind: ServiceAccount
    metadata:
      labels:
        app.kubernetes.io/instance: rebac-authz-webhook
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: rebac-authz-webhook
        app.kubernetes.io/version: 0.0.0
        helm.sh/chart: rebac-authz-webhook-0.0.0
      name: rebac-authz-webhook
it should render the application manifests with service account:
  1: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: rebac-authz-webhook
    rules:
      - apiGroups:
          - core.platform-mesh.io
        resources:
          - accounts
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - core.platform-mesh.io
        resources:
          - accounts
          - accounts/status
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - ""
        resources:
          - namespaces
        verbs:
          - get
          - list
          - watch
  2: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: rebac-authz-webhook
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: rebac-authz-webhook
    subjects:
      - kind: ServiceAccount
        name: rebac-authz-webhook
        namespace: platform-mesh-system
  3: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app.kubernetes.io/instance: rebac-authz-webhook
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: rebac-authz-webhook
        app.kubernetes.io/version: 0.0.0
        helm.sh/chart: rebac-authz-webhook-0.0.0
      name: rebac-authz-webhook
      namespace: platform-mesh-system
    spec:
      selector:
        matchLabels:
          app.kubernetes.io/instance: rebac-authz-webhook
          app.kubernetes.io/name: rebac-authz-webhook
      template:
        metadata:
          annotations: {}
          labels:
            app.kubernetes.io/instance: rebac-authz-webhook
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: rebac-authz-webhook
            app.kubernetes.io/version: 0.0.0
            helm.sh/chart: rebac-authz-webhook-0.0.0
            networking.resources.gardener.cloud/to-openfga-tcp-grpc: allowed
        spec:
          containers:
            - args:
                - serve
                - --openfga-addr=https://example.com
                - --kcp-kubeconfig-path=/etc/kcp-kubeconfig/kubeconfig
                - --webhook-audience=rebac-authz-webhook
                - --log-level=INFO
                - --health-probe-bind-address=:8081
              env: null
              image: ghcr.io/platform-mesh/rebac-authz-webhook:0.0.0
              livenessProbe:
                failureThreshold: 1
                httpGet:
                  path: /healthz
                  port: 8081
                periodSeconds: 10
              name: rebac-authz-webhook
              ports:
                - containerPort: 9443
                - containerPort: 8080
              readinessProbe:
                httpGet:
                  path: /readyz
                  port: 8081
                initialDelaySeconds: 5
                periodSeconds: 10
              resources:
                limits:
                  cpu: 500m
                  memory: 128Mi
              startupProbe:
                failureThreshold: 30
                httpGet:
                  path: /readyz
                  port: 8081
                periodSeconds: 10
              volumeMounts:
                - mountPath: /config
                  name: certs
                - mountPath: /etc/kcp-kubeconfig
                  name: kcp-kubeconfig
                  readOnly: true
          serviceAccountName: rebac-authz-webhook
          volumes:
            - name: certs
              secret:
                secretName: rebac-authz-webhook-cert
            - name: kcp-kubeconfig
              secret:
                secretName: rebac-authz-webhook-kubeconfig
  4: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app.kubernetes.io/instance: rebac-authz-webhook
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: rebac-authz-webhook
        app.kubernetes.io/version: 0.0.0
        helm.sh/chart: rebac-authz-webhook-0.0.0
      name: rebac-authz-webhook
    spec:
      ports:
        - name: rebac-authz-webhook
          port: 9443
          targetPort: 9443
        - name: metrics
          port: 8080
          targetPort: 8080
      selector:
        app.kubernetes.io/instance: rebac-authz-webhook
        app.kubernetes.io/name: rebac-authz-webhook
      type: ClusterIP
  5: |
    apiVersion: v1
    automountServiceAccountToken: true
    kind: ServiceAccount
    metadata:
      labels:
        app.kubernetes.io/instance: rebac-authz-webhook
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: rebac-authz-webhook
        app.kubernetes.io/version: 0.0.0
        helm.sh/chart: rebac-authz-webhook-0.0.0
      name: rebac-authz-webhook
it should render the application manifests with service monitor:
  1: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: rebac-authz-webhook
    rules:
      - apiGroups:
          - core.platform-mesh.io
        resources:
          - accounts
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - core.platform-mesh.io
        resources:
          - accounts
          - accounts/status
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - ""
        resources:
          - namespaces
        verbs:
          - get
          - list
          - watch
  2: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: rebac-authz-webhook
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: rebac-authz-webhook
    subjects:
      - kind: ServiceAccount
        name: rebac-authz-webhook
        namespace: platform-mesh-system
  3: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app.kubernetes.io/instance: rebac-authz-webhook
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: rebac-authz-webhook
        app.kubernetes.io/version: 0.0.0
        helm.sh/chart: rebac-authz-webhook-0.0.0
      name: rebac-authz-webhook
      namespace: platform-mesh-system
    spec:
      selector:
        matchLabels:
          app.kubernetes.io/instance: rebac-authz-webhook
          app.kubernetes.io/name: rebac-authz-webhook
      template:
        metadata:
          annotations: {}
          labels:
            app.kubernetes.io/instance: rebac-authz-webhook
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: rebac-authz-webhook
            app.kubernetes.io/version: 0.0.0
            helm.sh/chart: rebac-authz-webhook-0.0.0
            networking.resources.gardener.cloud/to-openfga-tcp-grpc: allowed
        spec:
          containers:
            - args:
                - serve
                - --openfga-addr=https://example.com
                - --kcp-kubeconfig-path=/etc/kcp-kubeconfig/kubeconfig
                - --webhook-audience=rebac-authz-webhook
                - --log-level=INFO
                - --health-probe-bind-address=:8081
              env: null
              image: ghcr.io/platform-mesh/rebac-authz-webhook:0.0.0
              livenessProbe:
                failureThreshold: 1
                httpGet:
                  path: /healthz
                  port: 8081
                periodSeconds: 10
              name: rebac-authz-webhook
              ports:
                - containerPort: 9443
                - containerPort: 8080
              readinessProbe:
                httpGet:
                  path: /readyz
                  port: 8081
                initialDelaySeconds: 5
                periodSeconds: 10
              resources:
                limits:
                  cpu: 500m
                  memory: 128Mi
              startupProbe:
                failureThreshold: 30
                httpGet:
                  path: /readyz
                  port: 8081
                periodSeconds: 10
              volumeMounts:
                - mountPath: /config
                  name: certs
                - mountPath: /etc/kcp-kubeconfig
                  name: kcp-kubeconfig
                  readOnly: true
          serviceAccountName: rebac-authz-webhook
          volumes:
            - name: certs
              secret:
                secretName: rebac-authz-webhook-cert
            - name: kcp-kubeconfig
              secret:
                secretName: rebac-authz-webhook-kubeconfig
  4: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app.kubernetes.io/instance: rebac-authz-webhook
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: rebac-authz-webhook
        app.kubernetes.io/version: 0.0.0
        helm.sh/chart: rebac-authz-webhook-0.0.0
      name: rebac-authz-webhook
    spec:
      ports:
        - name: rebac-authz-webhook
          port: 9443
          targetPort: 9443
        - name: metrics
          port: 8080
          targetPort: 8080
      selector:
        app.kubernetes.io/instance: rebac-authz-webhook
        app.kubernetes.io/name: rebac-authz-webhook
      type: ClusterIP
  5: |
    apiVersion: v1
    automountServiceAccountToken: true
    kind: ServiceAccount
    metadata:
      labels:
        app.kubernetes.io/instance: rebac-authz-webhook
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: rebac-authz-webhook
        app.kubernetes.io/version: 0.0.0
        helm.sh/chart: rebac-authz-webhook-0.0.0
      name: rebac-authz-webhook
  6: |
    apiVersion: monitoring.coreos.com/v1
    kind: ServiceMonitor
    metadata:
      labels:
        app.kubernetes.io/instance: rebac-authz-webhook
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: rebac-authz-webhook
        app.kubernetes.io/version: 0.0.0
        helm.sh/chart: rebac-authz-webhook-0.0.0
        prometheus: seed
      name: rebac-authz-webhook
    spec:
      endpoints:
        - port: metrics
      selector:
        matchLabels:
          app.kubernetes.io/instance: rebac-authz-webhook
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: rebac-authz-webhook
          app.kubernetes.io/version: 0.0.0
          helm.sh/chart: rebac-authz-webhook-0.0.0
it should render the application manifests with useInClusterClient:
  1: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: rebac-authz-webhook
    rules:
      - apiGroups:
          - core.platform-mesh.io
        resources:
          - accounts
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - core.platform-mesh.io
        resources:
          - accounts
          - accounts/status
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - ""
        resources:
          - namespaces
        verbs:
          - get
          - list
          - watch
  2: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: rebac-authz-webhook
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: rebac-authz-webhook
    subjects:
      - kind: ServiceAccount
        name: rebac-authz-webhook
        namespace: platform-mesh-system
  3: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app.kubernetes.io/instance: rebac-authz-webhook
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: rebac-authz-webhook
        app.kubernetes.io/version: 0.0.0
        helm.sh/chart: rebac-authz-webhook-0.0.0
      name: rebac-authz-webhook
      namespace: platform-mesh-system
    spec:
      selector:
        matchLabels:
          app.kubernetes.io/instance: rebac-authz-webhook
          app.kubernetes.io/name: rebac-authz-webhook
      template:
        metadata:
          annotations: {}
          labels:
            app.kubernetes.io/instance: rebac-authz-webhook
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: rebac-authz-webhook
            app.kubernetes.io/version: 0.0.0
            helm.sh/chart: rebac-authz-webhook-0.0.0
            networking.resources.gardener.cloud/to-openfga-tcp-grpc: allowed
        spec:
          containers:
            - args:
                - serve
                - --openfga-addr=https://example.com
                - --kcp-kubeconfig-path=/etc/kcp-kubeconfig/kubeconfig
                - --webhook-audience=rebac-authz-webhook
                - --log-level=INFO
                - --health-probe-bind-address=:8081
              env: null
              image: ghcr.io/platform-mesh/rebac-authz-webhook:0.0.0
              livenessProbe:
                failureThreshold: 1
                httpGet:
                  path: /healthz
                  port: 8081
                periodSeconds: 10
              name: rebac-authz-webhook
              ports:
                - containerPort: 9443
                - containerPort: 8080
              readinessProbe:
                httpGet:
                  path: /readyz
                  port: 8081
                initialDelaySeconds: 5
                periodSeconds: 10
              resources:
                limits:
                  cpu: 500m
                  memory: 128Mi
              startupProbe:
                failureThreshold: 30
                httpGet:
                  path: /readyz
                  port: 8081
                periodSeconds: 10
              volumeMounts:
                - mountPath: /config
                  name: certs
                - mountPath: /etc/kcp-kubeconfig
                  name: kcp-kubeconfig
                  readOnly: true
          serviceAccountName: rebac-authz-webhook
          volumes:
            - name: certs
              secret:
                secretName: rebac-authz-webhook-cert
            - name: kcp-kubeconfig
              secret:
                secretName: rebac-authz-webhook-kubeconfig
  4: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app.kubernetes.io/instance: rebac-authz-webhook
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: rebac-authz-webhook
        app.kubernetes.io/version: 0.0.0
        helm.sh/chart: rebac-authz-webhook-0.0.0
      name: rebac-authz-webhook
    spec:
      ports:
        - name: rebac-authz-webhook
          port: 9443
          targetPort: 9443
        - name: metrics
          port: 8080
          targetPort: 8080
      selector:
        app.kubernetes.io/instance: rebac-authz-webhook
        app.kubernetes.io/name: rebac-authz-webhook
      type: ClusterIP
  5: |
    apiVersion: v1
    automountServiceAccountToken: true
    kind: ServiceAccount
    metadata:
      labels:
        app.kubernetes.io/instance: rebac-authz-webhook
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: rebac-authz-webhook
        app.kubernetes.io/version: 0.0.0
        helm.sh/chart: rebac-authz-webhook-0.0.0
      name: rebac-authz-webhook
it should render the cert-manager manifests with certManager enabled:
  1: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: rebac-authz-webhook
    rules:
      - apiGroups:
          - core.platform-mesh.io
        resources:
          - accounts
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - core.platform-mesh.io
        resources:
          - accounts
          - accounts/status
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - ""
        resources:
          - namespaces
        verbs:
          - get
          - list
          - watch
  2: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: rebac-authz-webhook
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: rebac-authz-webhook
    subjects:
      - kind: ServiceAccount
        name: rebac-authz-webhook
        namespace: platform-mesh-system
  3: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app.kubernetes.io/instance: rebac-authz-webhook
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: rebac-authz-webhook
        app.kubernetes.io/version: 0.0.0
        helm.sh/chart: rebac-authz-webhook-0.0.0
      name: rebac-authz-webhook
      namespace: platform-mesh-system
    spec:
      selector:
        matchLabels:
          app.kubernetes.io/instance: rebac-authz-webhook
          app.kubernetes.io/name: rebac-authz-webhook
      template:
        metadata:
          annotations: {}
          labels:
            app.kubernetes.io/instance: rebac-authz-webhook
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: rebac-authz-webhook
            app.kubernetes.io/version: 0.0.0
            helm.sh/chart: rebac-authz-webhook-0.0.0
            networking.resources.gardener.cloud/to-openfga-tcp-grpc: allowed
        spec:
          containers:
            - args:
                - serve
                - --openfga-addr=https://example.com
                - --kcp-kubeconfig-path=/etc/kcp-kubeconfig/kubeconfig
                - --webhook-audience=rebac-authz-webhook
                - --log-level=INFO
                - --health-probe-bind-address=:8081
              env: null
              image: ghcr.io/platform-mesh/rebac-authz-webhook:0.0.0
              livenessProbe:
                failureThreshold: 1
                httpGet:
                  path: /healthz
                  port: 8081
                periodSeconds: 10
              name: rebac-authz-webhook
              ports:
                - containerPort: 9443
                - containerPort: 8080
              readinessProbe:
                httpGet:
                  path: /readyz
                  port: 8081
                initialDelaySeconds: 5
                periodSeconds: 10
              resources:
                limits:
                  cpu: 500m
                  memory: 128Mi
              startupProbe:
                failureThreshold: 30
                httpGet:
                  path: /readyz
                  port: 8081
                periodSeconds: 10
              volumeMounts:
                - mountPath: /config
                  name: certs
                - mountPath: /etc/kcp-kubeconfig
                  name: kcp-kubeconfig
                  readOnly: true
          serviceAccountName: rebac-authz-webhook
          volumes:
            - name: certs
              secret:
                secretName: rebac-authz-webhook-cert
            - name: kcp-kubeconfig
              secret:
                secretName: rebac-authz-webhook-kubeconfig
  4: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app.kubernetes.io/instance: rebac-authz-webhook
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: rebac-authz-webhook
        app.kubernetes.io/version: 0.0.0
        helm.sh/chart: rebac-authz-webhook-0.0.0
      name: rebac-authz-webhook
    spec:
      clusterIP: 10.96.86.219
      ports:
        - name: rebac-authz-webhook
          port: 9443
          targetPort: 9443
        - name: metrics
          port: 8080
          targetPort: 8080
      selector:
        app.kubernetes.io/instance: rebac-authz-webhook
        app.kubernetes.io/name: rebac-authz-webhook
      type: ClusterIP
  5: |
    apiVersion: v1
    automountServiceAccountToken: true
    kind: ServiceAccount
    metadata:
      labels:
        app.kubernetes.io/instance: rebac-authz-webhook
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: rebac-authz-webhook
        app.kubernetes.io/version: 0.0.0
        helm.sh/chart: rebac-authz-webhook-0.0.0
      name: rebac-authz-webhook
  6: |
    apiVersion: networking.istio.io/v1beta1
    kind: VirtualService
    metadata:
      name: rebac-authz-webhook
      namespace: platform-mesh-system
    spec:
      gateways:
        - platform-mesh-system/gateway
      hosts:
        - webhook.portal.cc.showroom.apeirora.eu
      tls:
        - match:
            - sniHosts:
                - webhook.portal.cc.showroom.apeirora.eu
          route:
            - destination:
                host: rebac-authz-webhook.platform-mesh-system.svc.cluster.local
                port:
                  number: 9443
