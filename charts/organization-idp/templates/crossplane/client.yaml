{{- if eq (include "common.getNestedValue" (dict "Values" .Values "key" "crossplane.enabled")) "true" -}}
apiVersion: openidclient.keycloak.crossplane.io/v1alpha1
kind: Client
metadata:
  name: {{ .Values.crossplane.client.name }}
spec:
  forProvider:
    enabled: true
    accessType: {{ default "CONFIDENTIAL" .Values.crossplane.client.accessType }}
    clientId: {{ .Values.crossplane.client.name }}
    standardFlowEnabled: true
    name: {{ .Values.crossplane.client.displayName }}
    realmIdRef:
      name: {{ .Values.crossplane.realm.name }}
    validRedirectUris: {{ toYaml .Values.crossplane.client.validRedirectUris | nindent 6 }}
  providerConfigRef:
    name: {{ .Values.crossplane.providerConfig.name }}
  {{- if ne .Values.keycloakConfig.client.accessType "PUBLIC" }}
  writeConnectionSecretToRef:
    name: {{ .Values.keycloakConfig.client.targetSecret.name }}
    namespace: {{ .Values.keycloakConfig.client.targetSecret.namespace }}
  {{- end }}

---

apiVersion: openidclient.keycloak.crossplane.io/v1alpha1
kind: ClientDefaultScopes
metadata:
  name: {{ .Values.crossplane.client.name}}-default-scopes
spec:
  forProvider:
    clientIdRef:
      name: {{ .Values.crossplane.client.name}}
    defaultScopes:
    - profile
    - email
    - basic
    - acr
    - groups
    - trusted-openmfp-audiences
    realmIdRef:
      name: {{ $.Values.crossplane.realm.name }}
  providerConfigRef:
    name: {{ $.Values.crossplane.providerConfig.name }}
{{- end -}}