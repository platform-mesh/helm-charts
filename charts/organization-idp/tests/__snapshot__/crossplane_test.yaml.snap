matches the snapshot:
  1: |
    apiVersion: openidclient.keycloak.crossplane.io/v1alpha1
    kind: Client
    metadata:
      name: clientname
    spec:
      forProvider:
        accessType: CONFIDENTIAL
        clientId: clientname
        enabled: true
        name: ClientName
        realmIdRef:
          name: default
        standardFlowEnabled: true
        validRedirectUris:
          - http://localhost:8000/callback*
          - http://localhost:4300/callback*
      providerConfigRef:
        name: keycloak-provider-config
      writeConnectionSecretToRef:
        name: portal-client-secret-organization-idp
        namespace: platform-mesh-system
  2: |
    apiVersion: openidclient.keycloak.crossplane.io/v1alpha1
    kind: Client
    metadata:
      name: clientname-kubectl
    spec:
      forProvider:
        accessType: PUBLIC
        clientId: kubectl
        enabled: true
        name: ClientName
        realmIdRef:
          name: default
        standardFlowEnabled: true
        validRedirectUris:
          - http://localhost:8000
          - http://localhost:18000
      providerConfigRef:
        name: keycloak-provider-config
  3: |
    apiVersion: openidclient.keycloak.crossplane.io/v1alpha1
    kind: ClientDefaultScopes
    metadata:
      name: clientname-default-scopes
    spec:
      forProvider:
        clientIdRef:
          name: clientname
        defaultScopes:
          - profile
          - email
          - basic
          - acr
        realmIdRef:
          name: default
      providerConfigRef:
        name: keycloak-provider-config
  4: |
    apiVersion: openidclient.keycloak.crossplane.io/v1alpha1
    kind: ClientScope
    metadata:
      name: trusted-clientname-audiences
    spec:
      forProvider:
        includeInTokenScope: true
        name: trusted-clientname-audiences
        realmIdRef:
          name: default
      providerConfigRef:
        name: keycloak-provider-config
  5: |
    apiVersion: organization.keycloak.crossplane.io/v1alpha1
    kind: Organization
    metadata:
      name: default
    spec:
      forProvider:
        alias: default
        name: default
        realmIdRef:
          name: default
      providerConfigRef:
        name: keycloak-provider-config
  6: |
    apiVersion: realm.keycloak.crossplane.io/v1alpha1
    kind: Realm
    metadata:
      name: default
    spec:
      forProvider:
        accessTokenLifespan: 8h
        displayName: default
        displayNameHtml: <b>default</b>
        enabled: true
        loginWithEmailAllowed: true
        organizationsEnabled: true
        realm: default
        registrationAllowed: true
        registrationEmailAsUsername: true
        ssoSessionIdleTimeout: 8h
        verifyEmail: true
      providerConfigRef:
        name: keycloak-provider-config
matches the snapshot with custom config:
  1: |
    apiVersion: openidclient.keycloak.crossplane.io/v1alpha1
    kind: Client
    metadata:
      name: clientname
    spec:
      forProvider:
        accessType: CONFIDENTIAL
        clientId: clientname
        enabled: true
        name: ClientName
        realmIdRef:
          name: default
        standardFlowEnabled: true
        validRedirectUris:
          - http://localhost:8000/callback*
          - http://localhost:4300/callback*
      providerConfigRef:
        name: keycloak-provider-config
      writeConnectionSecretToRef:
        name: portal-client-secret-organization-idp
        namespace: platform-mesh-system
  2: |
    apiVersion: openidclient.keycloak.crossplane.io/v1alpha1
    kind: Client
    metadata:
      name: clientname-kubectl
    spec:
      forProvider:
        accessType: PUBLIC
        clientId: kubectl
        enabled: true
        name: ClientName
        realmIdRef:
          name: default
        standardFlowEnabled: true
        validRedirectUris:
          - http://localhost:8000
          - http://localhost:18000
      providerConfigRef:
        name: keycloak-provider-config
  3: |
    apiVersion: openidclient.keycloak.crossplane.io/v1alpha1
    kind: ClientDefaultScopes
    metadata:
      name: clientname-default-scopes
    spec:
      forProvider:
        clientIdRef:
          name: clientname
        defaultScopes:
          - profile
          - email
          - basic
          - acr
        realmIdRef:
          name: default
      providerConfigRef:
        name: keycloak-provider-config
  4: |
    apiVersion: openidclient.keycloak.crossplane.io/v1alpha1
    kind: ClientScope
    metadata:
      name: trusted-clientname-audiences
    spec:
      forProvider:
        includeInTokenScope: true
        name: trusted-clientname-audiences
        realmIdRef:
          name: default
      providerConfigRef:
        name: keycloak-provider-config
  5: |
    apiVersion: organization.keycloak.crossplane.io/v1alpha1
    kind: Organization
    metadata:
      name: default
    spec:
      forProvider:
        alias: default
        name: default
        realmIdRef:
          name: default
      providerConfigRef:
        name: keycloak-provider-config
  6: |
    apiVersion: realm.keycloak.crossplane.io/v1alpha1
    kind: Realm
    metadata:
      name: default
    spec:
      forProvider:
        accessTokenLifespan: 8h
        displayName: default
        displayNameHtml: <b>default</b>
        enabled: true
        loginWithEmailAllowed: true
        organizationsEnabled: true
        realm: default
        registrationAllowed: true
        registrationEmailAsUsername: true
        ssoSessionIdleTimeout: 8h
        verifyEmail: true
      providerConfigRef:
        name: keycloak-provider-config
matches the snapshot with smtpConfig:
  1: |
    apiVersion: openidclient.keycloak.crossplane.io/v1alpha1
    kind: Client
    metadata:
      name: clientname
    spec:
      forProvider:
        accessType: CONFIDENTIAL
        clientId: clientname
        enabled: true
        name: ClientName
        realmIdRef:
          name: default
        standardFlowEnabled: true
        validRedirectUris:
          - http://localhost:8000/callback*
          - http://localhost:4300/callback*
      providerConfigRef:
        name: keycloak-provider-config
      writeConnectionSecretToRef:
        name: portal-client-secret-organization-idp
        namespace: platform-mesh-system
  2: |
    apiVersion: openidclient.keycloak.crossplane.io/v1alpha1
    kind: Client
    metadata:
      name: clientname-kubectl
    spec:
      forProvider:
        accessType: PUBLIC
        clientId: kubectl
        enabled: true
        name: ClientName
        realmIdRef:
          name: default
        standardFlowEnabled: true
        validRedirectUris:
          - http://localhost:8000
          - http://localhost:18000
      providerConfigRef:
        name: keycloak-provider-config
  3: |
    apiVersion: openidclient.keycloak.crossplane.io/v1alpha1
    kind: ClientDefaultScopes
    metadata:
      name: clientname-default-scopes
    spec:
      forProvider:
        clientIdRef:
          name: clientname
        defaultScopes:
          - profile
          - email
          - basic
          - acr
        realmIdRef:
          name: default
      providerConfigRef:
        name: keycloak-provider-config
  4: |
    apiVersion: openidclient.keycloak.crossplane.io/v1alpha1
    kind: ClientScope
    metadata:
      name: trusted-clientname-audiences
    spec:
      forProvider:
        includeInTokenScope: true
        name: trusted-clientname-audiences
        realmIdRef:
          name: default
      providerConfigRef:
        name: keycloak-provider-config
  5: |
    apiVersion: organization.keycloak.crossplane.io/v1alpha1
    kind: Organization
    metadata:
      name: default
    spec:
      forProvider:
        alias: default
        name: default
        realmIdRef:
          name: default
      providerConfigRef:
        name: keycloak-provider-config
  6: |
    apiVersion: realm.keycloak.crossplane.io/v1alpha1
    kind: Realm
    metadata:
      name: default
    spec:
      forProvider:
        accessTokenLifespan: 8h
        displayName: default
        displayNameHtml: <b>default</b>
        enabled: true
        loginWithEmailAllowed: true
        organizationsEnabled: true
        realm: default
        registrationAllowed: true
        registrationEmailAsUsername: true
        smtpServer:
          from: test
          host: smtp.example.com
          port: "587"
        ssoSessionIdleTimeout: 8h
        verifyEmail: true
      providerConfigRef:
        name: keycloak-provider-config
