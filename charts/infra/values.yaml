hostAliases:
  enabled: false
  entries:
    - ip: "10.96.188.4"
      hostnames:
        - "kcp.api.portal.dev.local"
        - "portal.dev.local"

crossplane:
  enabled: true

externalSecrets:
  enabled: false

kcp:
  image:
    tag: ""
  namespace: platform-mesh-system
  external:
    hostname: kcp.api.portal.dev.local
    port: 8443
  auth:
    adminCert:
      enabled: true
      privateKey:
        algorithm: RSA
        size: 2048
      subject:
        organizations:
          - system:kcp:admin
  etcd:
    name: etcd-kcp
    service:
      name: etcd-kcp-client
      port: 2379
    defragmentationSchedule: "0 */24 * * *"
    resources:
      limits:
        cpu: 500m
        memory: 1Gi
      requests:
        cpu: 100m
        memory: 200Mi
    serverPort: 2380
    quota: 8Gi
    backup:
      port: 8080
      fullSnapshotSchedule: "0 */24 * * *"
      resources:
        limits:
          cpu: 200m
          memory: 1Gi
        requests:
          cpu: 23m
          memory: 128Mi
      garbageCollectionPolicy: Exponential
      garbageCollectionPeriod: 43200s
      deltaSnapshotPeriod: 300s
      deltaSnapshotMemoryLimit: 1Gi
      compression:
        enabled: false
        policy: "gzip"
      leaderElection:
        reelectionPeriod: 5s
        etcdConnectionTimeout: 5s
    sharedConfig:
      autoCompactionMode: periodic
      autoCompactionRetention: "30m"
    replicas: 1

  oidc:
    enabled: false
    issuerUrl: ""
    clientID: ""
    groupsClaim: groups
    usernameClaim: email
    caFileRef:
      name: domain-certificate-ca
      key: tls.crt

  istio:
    hosts:
      - kcp.api.portal.dev.local

  webhook:
    enabled: true
    caData: ""
    server: https://rebac-authz-webhook.platform-mesh-system.svc.cluster.local:9443/authz
    authorizationWebhookSecretName: kcp-webhook-secret
    port: 9443

  rootShard:
    replicas: 1
  frontProxy:
    replicas: 1
    name: frontproxy
    clusterIP: ""
    port: 8443
    additionalPathMappings:
      - path: /services/contentconfigurations
        backend: https://virtual-workspaces.platform-mesh-system:8443
        backend_server_ca: /etc/kcp/tls/ca/tls.crt
        proxy_client_cert: /etc/kcp-front-proxy/requestheader-client/tls.crt
        proxy_client_key: /etc/kcp-front-proxy/requestheader-client/tls.key
      - path: /services/marketplace
        backend: https://virtual-workspaces.platform-mesh-system:8443
        backend_server_ca: /etc/kcp/tls/ca/tls.crt
        proxy_client_cert: /etc/kcp-front-proxy/requestheader-client/tls.crt
        proxy_client_key: /etc/kcp-front-proxy/requestheader-client/tls.key

openfga:
  rbac:
    requestPrincipals: []
    writePrincipals:
      - cluster.local/ns/platform-mesh-system/sa/iam-service
      - cluster.local/ns/platform-mesh-system/sa/iam-service-dataloader-sa
      - cluster.local/ns/platform-mesh-system/sa/security-operator
      - cluster.local/ns/platform-mesh-system/sa/account-operator

keycloak:
  istio:
    virtualservice:
      # -- istio virtual service hosts
      hosts: ["*"]
    https:
      port: 8443
  # -- service configuration
  service:
    # -- service name
    name: keycloak
    # -- service port
    port: 80

  # -- domain configuration
  domain:
    # -- domain name
    name: platform-mesh.io
    # -- path prefix
    pathPrefix: "/keycloak"

  crossplane:
    # -- toggle to enable/disable crossplane
    enabled: true

    # -- crossplane provider config
    providerConfig:
      # -- name of the client
      name: keycloak-provider-config
      # -- client namespace
      namespace: platform-mesh-system

    # -- crossplane realm config
    realm:
      # -- realm name
      name: welcome
      # -- realm display name
      displayName: welcome
      # -- realm registration allowed
      registrationAllowed: true
      # -- realm access token lifespan
      accessTokenLifespan: 8h

    clients:
      welcome:
        # -- name of the client
        name: Welcome
        # -- valid redirect uris for the client
        validRedirectUris:
          # -- keycloak callback url
          - http://localhost:8000/callback*
          - http://localhost:4300/callback*
    trustedAudiences: []

    identityProviders: {}

  keycloakConfig:
    # -- url of the keycloak server
    url: http://keycloak.platform-mesh-system.svc.cluster.local/keycloak
    userRegistration:
      # -- toggle to enable/disable user registration
      enabled: true
    # -- redirect urls
    redirectUrls: ["http://localhost:8000/callback*"]
    # -- realm configuration
    realm:
      # -- realm name
      name: master
    # -- client configuration
    client:
      # -- client name
      name: welcome
      # -- target secret options
      targetSecret:
        # -- secret name
        name: portal-client-secret-welcome
        # -- secret namespace
        namespace: platform-mesh-system
      # -- token lifespan
      tokenLifespan: 3600
    # -- admin user configuration
    admin:
      username:
        # -- username
        value: keycloak-admin
      # -- admin password
      password:
        valueFrom:
          secretKeyRef:
            # -- name of the secret containing the password
            name: keycloak-admin
            # -- key of the password in the secret
            key: secret
istio:
  networking:
    # -- The istio apiVersion used for networking resources in this chart eg. networking.istio.io/v1, networking.istio.io/v1beta1
    apiVersion: networking.istio.io/v1
  serviceEntries:
    https:
      # -- A toggle to enable the service entries for external https communication
      enabled: false
      # -- The list of hosts to be added to the service entry
      hosts: []
  enabled: true
  main:
    gateway:
      hosts:
        - "*"
      port: 8000
      name: http
      protocol: HTTP
  #      tls:
  #        minProtocolVersion: TLSV1_2
  #        mode: SIMPLE
  #        credentialName: istio-ingressgateway-certs
  passThrough:
    gateway:
      enabled: false
  #      hosts:
  #        - "passthrough.my-domain.com"
  #      port: 8000
  #      name: pass-https
  #      protocol: HTTPS


  gateway:
    annotations: {}
    apiVersion: networking.istio.io/v1
    name: gateway
    selector:
      istio: gateway
