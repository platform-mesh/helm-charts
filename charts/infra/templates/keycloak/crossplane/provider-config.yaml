{{- if eq (include "common.getNestedValue" (dict "Values" .Values "key" "crossplane.enabled")) "true" -}}
apiVersion: keycloak.crossplane.io/v1beta1
kind: ProviderConfig
metadata:
  name: {{ .Values.keycloak.crossplane.providerConfig.name }}
  namespace: {{ .Values.keycloak.crossplane.providerConfig.namespace }}
spec:
  credentials:
    source: Secret
    secretRef:
      name: {{ .Values.keycloak.crossplane.providerConfig.name }}
      namespace: {{ .Values.keycloak.crossplane.providerConfig.namespace }}
      key: config
{{- if not .Values.externalSecrets.enabled }}
---
{{- $keycloakAdminSecret := (lookup "v1" "Secret" "platform-mesh-system" "keycloak-admin") }}
{{- $pass := "" }}
{{- if and $keycloakAdminSecret (hasKey $keycloakAdminSecret.data "secret") }}
  {{- $pass = (index $keycloakAdminSecret.data "secret") | b64dec }}
{{- else }}
  {{- $pass = "aesaeXaefu0x" }}
{{- end }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.keycloak.crossplane.providerConfig.name }}
  namespace: {{ .Values.keycloak.crossplane.providerConfig.namespace }}
stringData:
  config: |
    {
      "client_id":"admin-cli",
      "username": "{{ .Values.keycloak.keycloakConfig.admin.username.value }}",
      "password": "{{ $pass }}",
      "url": "{{ .Values.keycloak.keycloakConfig.url }}",
      "realm": "master"
    }
{{- end -}}
{{- end -}}