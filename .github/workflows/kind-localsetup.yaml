name: test-local-setup
permissions:
  contents: read
on:
  pull_request:
    branches:
      - main

concurrency:
  group: localsetup-${{ github.event.pull_request.number }}
  cancel-in-progress: false

jobs:

  checkout-and-detect-changes:
    runs-on: ubuntu-latest-large
    outputs:
      local_setup_changed: ${{ steps.local_setup.outputs.changed }}

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0

      - name: Did local-setup change?
        id: local_setup
        run: |
          if git diff --quiet origin/${{ github.base_ref }} -- local-setup; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
          else
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi


  kind-localsetup:
    needs: checkout-and-detect-changes
    runs-on: ubuntu-latest-large

    steps:

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0

      - name: Skip when unchanged
        if: needs.checkout-and-detect-changes.outputs.local_setup_changed == 'false'
        run: echo "local-setup unchanged"

      - name: Install the gh cli
        if: needs.checkout-and-detect-changes.outputs.local_setup_changed == 'true'
        uses: ksivamuthu/actions-setup-gh-cli@c78dbed4be2f8d6133a14a9a597ee12fd4ed5c93 # v3
        with:
          version: 2.24.3
      - name: Install Task
        if: needs.checkout-and-detect-changes.outputs.local_setup_changed == 'true'
        uses: arduino/setup-task@v2
        with:
          version: 3.44.1
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: etc hosts update
        if: needs.checkout-and-detect-changes.outputs.local_setup_changed == 'true'
        run: |
          echo "127.0.0.1       kcp.api.portal.dev.local api.portal.dev.local portal.dev.local" | sudo tee -a /etc/hosts
      - name: Run local-setup
        if: needs.checkout-and-detect-changes.outputs.local_setup_changed == 'true'
        run: |
          task local-setup
      - name: Check/wait for all components to be ready
        if: needs.checkout-and-detect-changes.outputs.local_setup_changed == 'true'
        run: |
          sleep 10
          kubectl wait --for=condition=ready --timeout=10m component --all -A
          kubectl wait --for=condition=ready --timeout=10m resource --all -A
          kubectl wait --for=condition=ready --timeout=10m hr --all -A

      # Step 7: Prepare the NodeJS/playwright environment
      - name: Cache node modules
        if: needs.checkout-and-detect-changes.outputs.local_setup_changed == 'true'
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        with:
          path: ~/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Step 8: Install NodeJS and dependencies
      - name: Node ${{ matrix.node-version }}
        if: needs.checkout-and-detect-changes.outputs.local_setup_changed == 'true'
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: 'local-setup/e2e'

      # Step 9: Install npm dependencies
      - name: Clean install of npm dependencies
        if: needs.checkout-and-detect-changes.outputs.local_setup_changed == 'true'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd local-setup/e2e
          npm install
          npm ci
          npx playwright install 

      # Step 10: Run the end-to-end tests
      - name: End2End tests
        if: needs.checkout-and-detect-changes.outputs.local_setup_changed == 'true'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -ki https://portal.dev.local:8443
          cd local-setup/e2e/
          npx playwright test
