{{- if eq (include "common.getNestedValue" (dict "Values" .Values "key" "crossplane.enabled")) "true" -}}
{{- if eq (include "common.getKeyValue" (dict "Values" .Values "key" "externalSecrets.enabled")) "true" -}}
{{- range $key, $val := .Values.crossplane.identityProviders }}
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: {{ include "common.entity.name" $ }}-{{ $key }}
  namespace: openmfp-system
spec:
  refreshInterval: "10m"
  secretStoreRef:
    name: environment-store
    kind: SecretStore
  target:
    name: {{ $val.clientSecretRef.name }}
    creationPolicy: Owner
    deletionPolicy: Retain
  data:
    - secretKey: {{ $val.clientSecretRef.key }}
      remoteRef:
        key: {{ $val.clientSecretRemoteRef }}
        property: {{ $val.clientSecretRef.key }}
        conversionStrategy: Default
---
{{ end -}}
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: {{ include "common.entity.name" . }}-provider-config
  namespace: openmfp-system
spec:
  refreshInterval: "10m"
  secretStoreRef:
    name: environment-store
    kind: SecretStore
  target:
    name: {{ .Values.crossplane.providerConfig.name }}
    template:
      engineVersion: v2
      data:
        config: |
          {
            "client_id":"admin-cli",
            "username": "{{ .Values.keycloakConfig.admin.username.value }}",
            "password": "{{ `{{ .password }}` }}",
            "url": "{{ .Values.keycloakConfig.url }}",
            "realm": "master"
          }
  data:
    - secretKey: password
      remoteRef:
        key: {{ .Values.externalSecrets.keycloakAdminRemoteRef }}
        property: password
        conversionStrategy: Default
{{- end -}}
{{- end -}}